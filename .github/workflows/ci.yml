name: AIDE-Plus Build

on:
  push:
    branches: [ master, 2.3 ]
  pull_request:
    branches: [ master, 2.3 ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Set up NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r25c
        local-cache: true

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install CMake
      uses: lukka/get-cmake@latest
      
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: List Project Structure
      run: |
        echo "Current directory contents:"
        ls -la
        echo "Finding Gradle files:"
        find . -name "build.gradle" -o -name "settings.gradle"

    - name: Setup Gradle
      run: |
        wget https://services.gradle.org/distributions/gradle-8.0-bin.zip
        unzip gradle-8.0-bin.zip
        export PATH=$PATH:$PWD/gradle-8.0/bin
        
        echo "Checking project structure..."
        PROJECT_DIR=""
        if [ -f "app_rewrite/build.gradle" ]; then
          PROJECT_DIR="app_rewrite"
          echo "Found app_rewrite/build.gradle"
        elif [ -f "app/build.gradle" ]; then
          PROJECT_DIR="app"
          echo "Found app/build.gradle"
        else
          echo "No build.gradle found in app or app_rewrite directories"
        fi
        
        echo "Creating settings.gradle..."
        if [ ! -f "settings.gradle" ]; then
          if [ ! -z "$PROJECT_DIR" ]; then
            echo "include ':$PROJECT_DIR'" > settings.gradle
            echo "rootProject.name = 'AIDE-Plus'" >> settings.gradle
          else
            echo "rootProject.name = 'AIDE-Plus'" > settings.gradle
          fi
        fi
        cat settings.gradle
        
        echo "Creating root build.gradle..."
        if [ ! -f "build.gradle" ]; then
          echo 'buildscript {
              repositories {
                  google()
                  mavenCentral()
              }
              dependencies {
                  classpath "com.android.tools.build:gradle:8.0.0"
              }
          }
          
          allprojects {
              repositories {
                  google()
                  mavenCentral()
              }
          }
          
          tasks.withType(JavaCompile).configureEach {
              options.release = 17
          }' > build.gradle
        fi
        cat build.gradle
        
        if [ ! -z "$PROJECT_DIR" ] && [ ! -f "$PROJECT_DIR/build.gradle" ]; then
          echo "Creating $PROJECT_DIR/build.gradle..."
          mkdir -p $PROJECT_DIR
          echo 'plugins {
              id "com.android.application"
          }
          
          android {
              namespace "com.aide.plus"
              compileSdk 33
              
              defaultConfig {
                  applicationId "com.aide.plus"
                  minSdk 21
                  targetSdk 33
                  versionCode 1
                  versionName "1.0"
              }
              
              buildTypes {
                  release {
                      minifyEnabled false
                      proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
                  }
              }
              
              compileOptions {
                  sourceCompatibility JavaVersion.VERSION_17
                  targetCompatibility JavaVersion.VERSION_17
              }
          }
          
          dependencies {
              implementation fileTree(dir: "libs", include: ["*.jar"])
              implementation "androidx.appcompat:appcompat:1.6.1"
          }' > "$PROJECT_DIR/build.gradle"
          cat "$PROJECT_DIR/build.gradle"
        fi
        
        echo "Generating Gradle wrapper..."
        gradle wrapper --gradle-version 8.0
        chmod +x gradlew
        
        echo "Project structure after setup:"
        ls -la
        echo "Available Gradle tasks:"
        ./gradlew tasks --warning-mode all

    - name: Build Project
      run: |
        echo "Starting build process..."
        if [ -f "app_rewrite/build.gradle" ]; then
          echo "Building app_rewrite module..."
          ./gradlew :app_rewrite:assembleDebug --warning-mode all --info --stacktrace
        elif [ -f "app/build.gradle" ]; then
          echo "Building app module..."
          ./gradlew :app:assembleDebug --warning-mode all --info --stacktrace
        else
          echo "No build.gradle found in expected locations"
          find . -name "build.gradle"
          exit 1
        fi
      
    - name: Run Tests
      if: always()
      continue-on-error: true
      run: |
        echo "Running tests..."
        ./gradlew tasks --all
        if [ -f "app/build.gradle" ]; then
          echo "Testing app module..."
          ./gradlew :app:test --info || true
        elif [ -f "app_rewrite/build.gradle" ]; then
          echo "Testing app_rewrite module..."
          ./gradlew :app_rewrite:test --info || true
        fi
      
    - name: Build Native Libraries
      if: always()
      continue-on-error: true
      run: |
        if [ -d "native/EnsureCapacity" ]; then
          cd native/EnsureCapacity
          cmake .
          make
        fi
        
    - name: Upload APK
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: app-debug
        path: |
          app/build/outputs/apk/debug/*.apk
          app_rewrite/build/outputs/apk/debug/*.apk
          */build/outputs/apk/debug/*.apk
        if-no-files-found: warn
        
    - name: Upload Native Libraries
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: native-libs
        path: |
          native/EnsureCapacity/build/*.so
          */build/**/*.so
        if-no-files-found: warn

    - name: Upload Build Reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: build-reports
        path: |
          */build/reports/**/*
          build/reports/**/*
        if-no-files-found: warn

name: AIDE-Plus Build

on:
  push:
    branches: [ master, 2.3 ]
  pull_request:
    branches: [ master, 2.3 ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Set up NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r25c
        local-cache: true

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install CMake
      uses: lukka/get-cmake@latest

    - name: List Project Structure
      run: |
        echo "Current directory contents:"
        ls -la
        echo "Finding Gradle files:"
        find . -name "build.gradle" -o -name "settings.gradle"
        echo "Project structure:"
        tree -a || true

    - name: Setup Gradle
      run: |
        # 检查现有的Gradle文件
        if [ -f "build.gradle" ]; then
          echo "Using existing build.gradle"
          cat build.gradle
        fi
        
        if [ -f "settings.gradle" ]; then
          echo "Using existing settings.gradle"
          cat settings.gradle
        fi
        
        if [ -f "gradle.properties" ]; then
          echo "Using existing gradle.properties"
          cat gradle.properties
        fi
        
        # 下载并安装Gradle
        wget https://services.gradle.org/distributions/gradle-7.3.3-bin.zip
        unzip gradle-7.3.3-bin.zip
        export PATH=$PATH:$PWD/gradle-7.3.3/bin
        
        # 如果没有gradle wrapper，直接生成一个
        if [ ! -f "gradlew" ]; then
          echo "Creating Gradle Wrapper..."
          gradle wrapper --gradle-version 7.3.3
          chmod +x gradlew
        else
          echo "Using existing Gradle Wrapper"
          chmod +x gradlew
        fi
        
        echo "Project structure after setup:"
        ls -la
        echo "Available Gradle tasks:"
        ./gradlew tasks --warning-mode all || true

    - name: Build Project
      run: |
        echo "Starting build process..."
        # 尝试直接构建AP文件
        if [ -f "app/build.gradle" ]; then
          echo "Building app module..."
          ./gradlew :app:assembleRelease --warning-mode all --info --stacktrace || true
          ./gradlew :app:packageReleaseAp --warning-mode all --info --stacktrace || true
        fi
        
        if [ -f "app_rewrite/build.gradle" ]; then
          echo "Building app_rewrite module..."
          ./gradlew :app_rewrite:assembleRelease --warning-mode all --info --stacktrace || true
          ./gradlew :app_rewrite:packageReleaseAp --warning-mode all --info --stacktrace || true
        fi
      
    - name: Run Tests
      if: always()
      continue-on-error: true
      run: |
        echo "Running tests..."
        ./gradlew test --warning-mode all --info || true
      
    - name: Build Native Libraries
      if: always()
      continue-on-error: true
      run: |
        echo "Checking native directory structure..."
        if [ -d "native" ]; then
          echo "Native directory contents:"
          ls -la native/
        fi
        
        if [ -d "native/EnsureCapacity" ]; then
          echo "EnsureCapacity directory contents:"
          ls -la native/EnsureCapacity/
          
          if [ -f "native/EnsureCapacity/CMakeLists.txt" ]; then
            echo "Building native library..."
            cd native/EnsureCapacity
            cmake .
            make
          else
            echo "No CMakeLists.txt found in native/EnsureCapacity"
            echo "Searching for CMakeLists.txt files:"
            find . -name "CMakeLists.txt"
            
            # Try to find the correct native directory
            NATIVE_DIR=$(find . -name "CMakeLists.txt" -exec dirname {} \; | head -n 1)
            if [ ! -z "$NATIVE_DIR" ]; then
              echo "Found CMakeLists.txt in $NATIVE_DIR"
              cd "$NATIVE_DIR"
              cmake .
              make
            fi
          fi
        else
          echo "Native directory structure not found"
          echo "Current directory structure:"
          find . -type d
        fi
        
    - name: Upload AP Files
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: ap-files
        path: |
          */build/outputs/ap/release/*.ap
          */build/intermediates/ap/release/*.ap
          */build/intermediates/processed_res/release/*.ap
        if-no-files-found: warn
        
    - name: Upload APK Files
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: apk-files
        path: |
          */build/outputs/apk/release/*.apk
          */build/outputs/apk/debug/*.apk
        if-no-files-found: warn
        
    - name: Upload Native Libraries
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: native-libs
        path: |
          */build/**/*.so
        if-no-files-found: warn

    - name: Upload Build Reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: build-reports
        path: |
          */build/reports/**/*
          build/reports/**/*
        if-no-files-found: warn
